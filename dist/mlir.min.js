hljs.registerLanguage("mlir",function(){"use strict";return function(e){
var n="([a-zA-Z_][\\w\\d_$.]*)";return{name:"MLIR",
keywords:"func module br cond_br return",contains:[{className:"keyword",
variants:[{begin:"i\\d+"},{begin:"f(16|32|64)"},{begin:"bf16"}]
},e.C_LINE_COMMENT_MODE,{className:"keyword",
begin:"\\b(memref<|tensor<|vector)\\b",end:">",contains:["self",{
className:"number",variants:[{begin:"\\*"},{begin:"[\\?\\dx]+"}]},{
className:"keyword",variants:[{begin:"i\\d+"},{begin:"f(16|32|64)"},{
begin:"bf16"}]}]},e.QUOTE_STRING_MODE,{className:"string",variants:[{begin:'"',
end:'[^\\\\]"'}],relevance:0},{className:"title",variants:[{begin:"@"+n},{
begin:"@\\d+"},{begin:"!"+n},{begin:"!\\d+"+n}]},{className:"symbol",variants:[{
begin:"%"+n+"([:#]\\d+)?"},{begin:"%\\d+([:#]\\d+)?"}]},{className:"symbol",
variants:[{begin:"\\^"+n}]},{className:"type",variants:[{begin:"!"+n}]},{
className:"number",variants:[{begin:"0[xX][a-fA-F0-9]+"},{
begin:"-?\\d+(?:[.]\\d+)?(?:[eE][-+]?\\d+(?:[.]\\d+)?)?"}],relevance:0}]}}}());